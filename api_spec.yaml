# Online editor at
# http://editor.swagger.io/#!/
####
---
swagger: '2.0'
info:
  title: HSPC API
  description: HSPC API Server
  version: "0.0.1"
  contact:
    name: API Support
    email: chandanchowdhury@ksu.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# the domain of the service
# TODO: Enable is production
# host: hspc.cs.ksu.com
# security definitions
#securityDefinitions:
#  api_key:
#    type: apiKey
#    name: api_key
#    in: header
# array of all schemes that your API supports
schemes:
  # TODO: Disable HTTP and enable HTTPS when implementing in production
  - http
  # - https
# will be prefixed to all paths
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
paths:
# API paths for emailaddress
  /emailaddress:
    post:
      operationId: Add new email address
      tags:
        - emailaddress
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/EmailAddress'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/EmailAddress'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /emailaddress/{id}:
    parameters:
      - name: id
        in: path
        type: integer
        format: int32
        required: true
    get:
      tags:
        - emailaddress
      operationId: getEmailAddress
      responses:
        200:
          description: Get an email address using ID
          schema:
            $ref: '#/definitions/EmailAddress'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Update emailaddress
      tags:
        - emailaddress
      operationId: updateEmailAddress
      parameters:
        - name: body
          in: body
          required: true
          description: EmailAddress object
          schema:
            $ref: '#/definitions/EmailAddress'
      responses:
        200:
          description: Returns ID of the updated emailaddress
          schema:
            type: integer
            format: int32
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: Given a email address id, delete the emailaddress
      tags:
        - emailaddress
      operationId: deleteEmailAddress
      responses:
        200:
          description: Return ID of the deleted email address if successfully deleted
          schema:
            type: integer
            format: int32
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
# TODO: API paths for Address
# API paths for School
  /school:
    get:
      description: Return the list of schools
      tags:
        - school
      operationId: getAllSchools
      responses:
        200:
          description: List of Schools
          schema:
            type: array
            items:
              $ref: '#/definitions/School'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      description: Create a new school
      operationId: createSchool
      tags:
        - school
      parameters:
        - name: body
          in: body
          description: school object
          required: true
          schema:
            $ref: '#/definitions/School'
      responses:
        200:
          description: Return the ID of the newly created school
          schema:
            $ref: '#/definitions/School'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /schoo/{id}:
    parameters:
      - name: id
        description: ID of the School
        in: path
        type: integer
        format: int32
        required: true
    get:
      description: Given a school id, return the details
      tags:
        - school
      operationId: getSchool
      responses:
        200:
          description: School Information
          schema:
            $ref: '#/definitions/School'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      description: Update school
      tags:
        - school
      operationId: updateSchool
      parameters:
        - name: school
          description: School object
          in: body
          schema:
            $ref: '#/definitions/School'
      responses:
        200:
          description: Returns School ID of the updated school
          schema:
            type: integer
            format: int32
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      description: Given a school id, delete the school
      tags:
        - school
      operationId: deleteSchool
      responses:
        200:
          description: Return ID of the deleted school if successfully deleted
          schema:
            type: integer
            format: int32
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

# TODO: API paths for Advisor
# TODO: API paths for Student
# TODO: API paths for Team
# TODO: API paths for Login

#
### Define all the Models
# Ref: https://github.com/OAI/OpenAPI-Specification/blob/3.0.0-rc0/versions/3.0.md#schemaObject

definitions:
  EmailAddress:
    type: object
    properties:
      emailaddress_id:
        type: integer
        format: int32
        minimum: 1
      emailaddress:
        type: string
        format: email
    required:
      - emailaddress
  # TODO: Model for login
  Address:
    type: object
    properties:
      address_id:
        type: integer
        format: int32
        minimum: 1
      country:
        type: string
        description: Country
        default: USA
      zipcode:
        type: string
        description: Zip code
      state:
        type: string
        description: State
      city:
        type: string
        description: city or town
      line2:
        type: string
        description: optional details like street
      line1:
        type: string
        description: building and room
    required:
      - state
      - city
      - line1

  School:
    type: object
    properties:
      school_id:
        type: integer
        format: int32
        minimum: 1
        description: ID of the school in DB
      school_name:
        type: string
        description: Name of the school
        example: Ideal World High School
      address_id:
        type: integer
        format: int32
    required:
      - school_id
      - school_name

  Advisor:
    type: object
    properties:
      advisor_id:
        type: integer
        format: int32
        minimum: 1
      advisor_name:
        type: string
      emailaddress_id:
        type: integer
        format: int32
        minimum: 1
      advisor_password:
        type: string
        format: password
      school_id:
        type: integer
        format: int32
    required:
        - advisor_name
        - emailaddress_id
        - advisor_password
        - school_id

  Student:
    type: object
    properties:
      student_id:
        type: integer
        format: int32
        minimum: 1
      student_name:
        type: string
      school_id:
        type: integer
        format: int32
    required:
      - student_name

  Team:
    type: object
    properties:
      team_id:
        type: integer
        format: int32
        minimum: 1
      team_name:
        type: string
      advisor_id:
        type: integer
        format: int32
        minimum: 1
      team_division:
        type: string
        enum:
          - B # for Beginner
          - A # for Advance
      team_members:
        type: array
        items:
          #- student_id:
            type: integer
            format: int32
            minimum: 1
    required:
      - team_id
      - team_name
      - team_division
      - advisor_id

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string